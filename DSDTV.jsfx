desc:DSDTV

in_pin:left input
in_pin:right input
out_pin:left output
out_pin:right output

slider1:delta=0.82<0.0001,0.9999,0.0001>delta

//import elliptic-lp.jsfx-inc

@init
marker = 0x050000;
mult = 2^23;
invmult = 2^-23;
toggle = 1;
commonSrate = 176400*16;
desiredSrate = 2000000;
invdesired = 1/desiredSrate;
upsampling = commonSrate / srate; // ensure that this value is integer 
downsampling = commonSrate / desiredSrate; // this really ought to be close to an integer, but we can deal with it
invdown = desiredSrate / commonSrate;
invup = srate / commonSrate;

samplesPerDoubleFrame = commonSrate / 25;
samplesPerFrame = samplesPerDoubleFrame * 0.5;

// graphics specific definitions/constants
pimult = $pi*4;
togglefreq = 2*$pi/srate*0.25;

// other constants (performance matters here!)
inv305 = 1/305;
invhpos = 1 / (128-6);
inv128 = 1/128;

// actual function to display graphics for each rendered sample in each line
function display() (
  //0.2 * cos(pimult*(sqrt((hpos*hpos + vpos*vpos))+togglefreq*c));
  sin(pimult*hpos) * sin(pimult*vpos);
  0;
);

// run this for every DSD sample
function upsampled_code()
(
  // position wrapping every second
  position = (position + 1) % commonSrate;
  // wrapped position in frame (seconds/50)
  position1 = position % samplesPerDoubleFrame;
  position2 = position1 % samplesPerFrame;
  position2 == 0 ? toggle = sin(togglefreq*c);
    // count of complete horizontal lines
    hcount = 0|(int * inv128);
    // position in horizontal line
    hblank = int % 128;
    // always sync at the start of a line
    hblank <= 5
      // longer sync for video frames
      || (hblank < 9 && 5 <= hcount && hcount < 310)
      || (hblank < 9 && 317 <= hcount && hcount < 622)
      // vsync
      // first two sync lines of both fields
      || ((hcount < 315 && (hcount < 2 || hcount > 312) ) && ((hblank <= 64 && hblank < 124) || hblank < 60))
      // third sync line
      || (hcount == 2 && hblank < 60)
      // 313 sync line
      || (hcount == 312 && hblank <= 64 && hblank < 124) ? out_unf = -1 : out_unf = -0.35;
  );
  // calculate graphics, when in the right place
  // first field (305 out of 312 lines)
  5 <= hcount && hcount < 310 && (26 <= hblank && hblank < 127) ? (
    hpos = (wrapped + (hblank - 4)) * invhpos - 0.5;
    vpos = (hcount - 5.5) * inv305 - 0.5;
    out_unf = 0.2 + 0.4 * display();
  );
  // second field (305 out of 313 lines)
  317 <= hcount && hcount < 622 && (26 <= hblank && hblank < 127) ? (
    hpos = (wrapped + (hblank - 4)) * invhpos - 0.5;
    vpos = (hcount - 316.5) * inv305 - 0.5;
    out_unf = -0.7 + 0.4 * display();
  );
  //avg += out_unf;
  sum  += out_unf*0.5 - quant;
  out = omdelta*sum + delta*out;
  ret = out > 0;
  quant = 2*ret-1;
)

@slider
omdelta = 1-delta;
//elp.ellipticLP_set(delta);

@sample

// upsample to DSD frequency
total = 0;
avg = 0;
loop(upsampling,
  // generate a bit
  upsampled_code();
  // accumulate bit in total (MSB should be oldest bit)
  total *= 2;
  total += ret;
);

// toggle marker (8 MSB of 24 bits) between 05 and FA, like in https://dsd-guide.com/sites/default/files/white-papers/DoP_openStandard_1v1.pdf
marker != 0x050000 ? marker = 0x050000 : marker = 0xFA0000;

total = total | marker;

total&0x800000 ? total = -1-(total~0xffffff);

spl0 = spl1 = total * invmult;
c += 1;
